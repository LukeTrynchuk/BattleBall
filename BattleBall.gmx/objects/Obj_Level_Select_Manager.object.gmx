<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the level selector
CurrentLevel = 0;       //The current level we are selecting
TotalLevel = 3;         //Total number of levels available

CanSwitch = true;
SwitchTimer = room_speed * 0.15; 
gp_id = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CanSwitch = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Let the player choose the level
GetClassInput();

if(left &amp;&amp; CanSwitch)
{
    CurrentLevel--;
    if(CurrentLevel &lt; 0) CurrentLevel = 0;
    CanSwitch = false;
    alarm[0] = SwitchTimer;
}

if(right &amp;&amp; CanSwitch)
{
    CurrentLevel++;
    if(CurrentLevel &gt; TotalLevel - 1) CurrentLevel = TotalLevel -1;
    CanSwitch = false;
    alarm[0] = SwitchTimer;
}

if(CanSwitch &amp;&amp; confirm)
{
    switch(CurrentLevel)
    {
        case 0:
            room_goto(BattleRoom0);
            break;
        case 1:
            room_goto(BattleRoom1);
            break;
        case 2:
            room_goto(BattleRoom2);
            break;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw available levels
draw_text(room_width / 2 - 50, room_height / 3, "Choose Level");

draw_text(room_width / 3 - 25, room_height / 3 * 2 - 10, "Lvl.1");
draw_text(room_width/2 - 25, room_height / 3 * 2 - 10, "Lvl.2");
draw_text(room_width / 3 * 2 - 25, room_height / 3 * 2 - 10, "Lvl.3");

switch(CurrentLevel)
{
    case 0:
        draw_sprite_ext(Level_Selected,0,room_width / 3, room_height / 3 * 2,1,1,0,c_white,1);
        draw_sprite_ext(Level_NonSelect,0,room_width/2, room_height / 3 * 2,1,1,0,c_white,1);
        draw_sprite_ext(Level_NonSelect,0,room_width / 3 * 2, room_height / 3 * 2,1,1,0,c_white,1);
        break;
    case 1:
        draw_sprite_ext(Level_NonSelect,0,room_width / 3, room_height / 3 * 2,1,1,0,c_white,1);
        draw_sprite_ext(Level_Selected,0,room_width/2, room_height / 3 * 2,1,1,0,c_white,1);
        draw_sprite_ext(Level_NonSelect,0,room_width / 3 * 2, room_height / 3 * 2,1,1,0,c_white,1);
        break;
    case 2:
        draw_sprite_ext(Level_NonSelect,0,room_width / 3, room_height / 3 * 2,1,1,0,c_white,1);
        draw_sprite_ext(Level_NonSelect,0,room_width/2, room_height / 3 * 2,1,1,0,c_white,1);
        draw_sprite_ext(Level_Selected,0,room_width / 3 * 2, room_height / 3 * 2,1,1,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
